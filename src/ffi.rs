/* automatically generated by rust-bindgen - mostly */

#![allow(dead_code, non_camel_case_types, non_upper_case_globals, non_snake_case)]

#[link(name = "tinyfiledialogs", kind = "static")]
extern "C" {
    pub static mut tinyfd_version: [::std::os::raw::c_char; 8usize];
    pub static mut tinyfd_winUtf8: ::std::os::raw::c_int;
    pub static mut tinyfd_forceConsole: ::std::os::raw::c_int;
    pub static mut tinyfd_response: [::std::os::raw::c_char; 1024usize];
}

#[link(name = "tinyfiledialogs", kind = "static")]
extern "C" {
    pub fn tinyfd_messageBox(aTitle: *const ::std::os::raw::c_char,
                             aMessage: *const ::std::os::raw::c_char,
                             aDialogType: *const ::std::os::raw::c_char,
                             aIconType: *const ::std::os::raw::c_char,
                             aDefaultButton: ::std::os::raw::c_int)
                             -> ::std::os::raw::c_int;

    pub fn tinyfd_inputBox(aTitle: *const ::std::os::raw::c_char,
                           aMessage: *const ::std::os::raw::c_char,
                           aDefaultInput: *const ::std::os::raw::c_char)
                           -> *const ::std::os::raw::c_char;

    pub fn tinyfd_saveFileDialog(aTitle: *const ::std::os::raw::c_char,
                                 aDefaultPathAndFile:
                                 *const ::std::os::raw::c_char,
                                 aNumOfFilterPatterns: ::std::os::raw::c_int,
                                 aFilterPatterns:
                                 *const *const ::std::os::raw::c_char,
                                 aSingleFilterDescription:
                                 *const ::std::os::raw::c_char)
                                 -> *const ::std::os::raw::c_char;
    pub fn tinyfd_openFileDialog(aTitle: *const ::std::os::raw::c_char,
                                 aDefaultPathAndFile:
                                 *const ::std::os::raw::c_char,
                                 aNumOfFilterPatterns: ::std::os::raw::c_int,
                                 aFilterPatterns:
                                 *const *const ::std::os::raw::c_char,
                                 aSingleFilterDescription:
                                 *const ::std::os::raw::c_char,
                                 aAllowMultipleSelects: ::std::os::raw::c_int)
                                 -> *const ::std::os::raw::c_char;

    pub fn tinyfd_selectFolderDialog(aTitle: *const ::std::os::raw::c_char,
                                     aDefaultPath:
                                     *const ::std::os::raw::c_char)
                                     -> *const ::std::os::raw::c_char;

    pub fn tinyfd_colorChooser(aTitle: *const ::std::os::raw::c_char,
                               aDefaultHexRGB: *const ::std::os::raw::c_char,
                               aDefaultRGB: *const ::std::os::raw::c_uchar,
                               aoResultRGB: *mut ::std::os::raw::c_uchar)
                               -> *const ::std::os::raw::c_char;

    #[cfg(not(windows))]
    pub fn tinyfd_arrayDialog(aTitle: *const ::std::os::raw::c_char,
                              aNumOfColumns: ::std::os::raw::c_int,
                              aColumns: *const *const ::std::os::raw::c_char,
                              aNumOfRows: ::std::os::raw::c_int,
                              aCells: *const *const ::std::os::raw::c_char) -> *const ::std::os::raw::c_char;

    /*
    pub fn tinyfd_messageBoxW(aTitle: *const libc::wchar_t,
                              aMessage: *const libc::wchar_t,
                              aDialogType: *const libc::wchar_t,
                              aIconType: *const libc::wchar_t,
                              aDefaultButton: ::std::os::raw::c_int)
                              -> ::std::os::raw::c_int;
    pub fn tinyfd_saveFileDialogW(aTitle: *const libc::wchar_t,
                                  aDefaultPathAndFile: *const libc::wchar_t,
                                  aNumOfFilterPatterns: ::std::os::raw::c_int,
                                  aFilterPatterns: *const *const libc::wchar_t,
                                  aSingleFilterDescription: *const libc::wchar_t)
                                  -> *const libc::wchar_t;
    pub fn tinyfd_openFileDialogW(aTitle: *const libc::wchar_t,
                                  aDefaultPathAndFile: *const libc::wchar_t,
                                  aNumOfFilterPatterns: ::std::os::raw::c_int,
                                  aFilterPatterns: *const *const libc::wchar_t,
                                  aSingleFilterDescription: *const libc::wchar_t,
                                  aAllowMultipleSelects:
                                  ::std::os::raw::c_int)
                                  -> *const libc::wchar_t;
    pub fn tinyfd_selectFolderDialogW(aTitle: *const libc::wchar_t,
                                      aDefaultPath: *const libc::wchar_t)
                                      -> *const libc::wchar_t;
    pub fn tinyfd_colorChooserW(aTitle: *const libc::wchar_t,
                                aDefaultHexRGB: *const libc::wchar_t,
                                aDefaultRGB: *const ::std::os::raw::c_uchar,
                                aoResultRGB: *mut ::std::os::raw::c_uchar)
                                -> *const libc::wchar_t;
    */
}
